<!-- 1.wxml的格式 -->

<!-- 2.Mustache -->
<view>Hello </view>
<view>{{message}}</view>
<view>{{firstname}} {{lastname}}</view>
<view>{{firstname + ' ' + lastname}}</view>
<view>{{age>=18 ? '成年人' : '未成年'}}</view>
<view>{{nowtime}}</view>

<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class="box {{isClass ? 'active' : ''}}">hhh</view>

<view>----------条件判断------------</view>
<!-- wx:if的使用 -->
<button size="mini" bindtap="handleSwitchShow">切换</button>
<view wx:if="{{isShow}}">哈哈哈</view>

<!-- wx:elif/wx:else的使用 -->
<view wx:if="{{score>=90}}">优秀</view>
<view wx:elif="{{score>=80}}">良好</view>
<view wx:elif="{{score>=60}}}">及格</view>
<view wx:else>不及格</view>

<!-- hidden属性-->
<view hidden="{{false}}">我是hidden属性控制的内容</view>

<!-- wx:if和hidden在隐藏组件时有什么区别 -->
<!-- 
  区别：
    hidden:将一个组件隐藏起来时，该组件依然是存在(display:none)
    wx:if:将一个组件隐藏起来时，该组件根本不存在(压根没有创建)
  选择：
    如果显示和隐藏切换的频繁非常高，选择使用hidden
    如果显示和隐藏切换的频率非常低，那么选择wx:if
 -->
<view>-----------------------------------------</view>
<view hidden="{{false}}">我是通过hidden控制的内容</view>
<view wx:if="{{true}}">我是通过wx:if控制的内容</view>

<view>----------------列表渲染----------------</view>
<!-- wx:for的回顾-->
<!-- 1.1.遍历数组/字符串/数字 -->
<!-- <view wx:for="{{['qwe','qww','rhh']}}" wx:key="index">{{item}} {{index}}</view>
<view wx:for="{{9}}" wx:key="index">{{item}}</view> -->

<!-- <view wx:if="{{false}}">
	<button>按钮</button>
	<view>呵呵呵</view>
</view>

<block wx:for="{{3}}">
	<button>按钮</button>
	<view>呵呵呵</view>
</block> -->

<!-- 3.item、index起名字 -->
<!-- <view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}} {{i}}</view>

<block wx:for="{{nums}}" wx:for-item="innernums">
  <block wx:for="{{innernums}}">
    <view>{{item}}</view>
  </block>
</block> -->

<!--  4.key的作用-->
<!-- <view wx:for="{{['a','b','c','d']}}" wx:key="index">{{item}}</view> -->

<view>----------------template----------------</view>
<!-- 
  之前的时候小程序不支持自定义组件，为了进行代码的复用：template
 -->
 <!-- 模板中包裹的内容，在没有被使用前，是不会进行任何的渲染的 -->
 <!-- <template name="contentItem"> 
  <button size="mini">{{btnText}}</button>
  <view>{{content}}</view>
 </template> -->

 <!-- 结论：include不能导入template -->
 <import src="/wxml/template.wxml"/>

<template is="contentItem" data="{{btnText:'按钮',content:'hello'}}"/>
<template is="contentItem" data="{{btnText:'as',content:'ddd'}}"/>

<!-- 错误的写法 -->
<view>{{numberToFixed(23.444444)}}</view>